sudo kextunload traceexec.kext; rm -rf src/traceexec/kext/traceexec.kext && ninja traceexec_test traceexec_kext && sudo sh -c "rm -rf traceexec.kext && cp -R src/traceexec/kext/traceexec.kext traceexec.kext && chown -R root:wheel traceexec.kext && kextutil traceexec.kext" && ./src/traceexec/traceexec_test

ninja traceexec_test && ./src/traceexec/traceexec_test

sudo kextunload traceexec.kext
sudo kextload traceexec.kext



POSIX_SPAWN_SETEXEC
man posix_spawnattr_setflags


https://urchin.earth.li/~twic/Kernel_Extensions_for_OS_X.html
https://developer.apple.com/library/mac/documentation/Darwin/Conceptual/NKEConceptual/control/control.html
http://www.opensource.apple.com/source/xnu/xnu-2050.18.24/bsd/sys/kern_control.h



  mac_framework.h:
contains a bunch of stuff re kauth_cred_t, label and proc

mpo_proc_label_init_t
kauth_proc_label_update  << for changing a label for a process

  ucred.h:
typedef struct ucred *kauth_cred_t;
ucred has member struct label *cr_label;  /* MAC label */


kauth_cred_create  << ?? What does this do?


  cr = kauth_cred_proc_ref(p);

  MALLOC(buffer, char *, mac.m_buflen, M_MACTEMP, M_WAITOK | M_ZERO);
  error = mac_cred_label_externalize(cr->cr_label,
      elements, buffer, mac.m_buflen, M_WAITOK);


  kern_fork.c:
    /*
     * allow policies to associate the credential/label that
     * we referenced from the parent ... with the child
     * JMM - this really isn't safe, as we can drop that
     *       association without informing the policy in other
     *       situations (keep long enough to get policies changed)
     */
    mac_cred_label_associate_fork(child_proc->p_ucred, child_proc);
