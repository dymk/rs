Known Limitations:

* shk-trace can't trace shk-trace.
* cannot accurately trace paths that end with a > character.
* tracing will do the wrong thing if the traced program moves non-empty
  directories.
* symlinks are not properly handled: A syscall that accesses a file through a
  symlink (this is true for both the last part of the path and parent
  directories) will report only the link target as accessed. (Syscalls that
  specifically read a symlink or that have a *_NOFOLLOW flag will report that
  they accessed the symlink, but with resolved directory symlinks). In practice,
  these limitations will apply: Symlinks can be used only if
  * they are strictly ancestor directories of what Shuriken operates with, for
    example if /Users/peck is a symlink and the build folder is in
    /Users/peck/coding/project/build, or
  * Build steps never access files through them: They can create links and they
    can read them, but never make calls that follow the symlink.
* link and sometimes open (if O_CREATE flag is not set) implicitly verifies the
  non-existence of the target file. shk-trace does not detect this.
* renamex_np and renameatx_np with RENAME_SWAP flag is not supported and
  silently does the wrong thing (but: HFS+ does not support it either so it
  might not be a huge problem.)
