namespace ShkTrace;

enum EventType : byte {
  /// Read is used when a program performs an operation that provides
  /// information about a given file, including both metadata and actual file
  /// contents.
  ///
  /// When the path points to a directory, it only means that the metadata of
  /// the directory has been accessed. If the actual directory entries were
  /// accessed, the EventType ReadDirectory is used.
  Read,

  /// ReadDirectory is used when a program performs an operation that lists the
  /// entries of a given directory, including metadata.
  ReadDirectory,

  /// Write is used when a program performs an operation that modifies a file
  /// but that could potentially leave parts of the previous file contents.
  Write,

  /// Create is used when a program creates a file, or when it entirely
  /// overwrites the contents of a file.
  Create,

  /// Delete is used when a program deletes a file. Because deleting a file
  /// exposes information to the program about whether the file exists, Delete
  /// also implies Read. (Delete+Create is used when moving files, so Delete
  /// truly implies that the file contents matter as well.)
  Delete,

  /// FatalError events mean that the Tracer has failed. It could be that it's
  /// seen an event that the Tracer does not understand, and it doesn't know
  /// which files may have been read or written because of it. This happens for
  /// legacy Carbon File Manager system calls. It can also be because of
  /// internal errors in the tracer.
  ///
  /// For FatalError events, the path provided is undefined and has no
  /// meaning.
  FatalError
}

table Event {
  type:EventType;
  path:string (required);
}

table Trace {
  events:[Event] (required);
}

file_extension "trace";
root_type Trace;
